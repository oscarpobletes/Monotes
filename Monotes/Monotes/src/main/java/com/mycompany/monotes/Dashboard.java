/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.monotes;

import java.awt.Color;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author oscar poblete saenz
 */
public class Dashboard extends javax.swing.JFrame {
    ImageIcon picvector= new ImageIcon("Pic.png");
    ImageIcon lianavector= new ImageIcon("Liana.png");
    DefaultTableModel model;
    
    public Dashboard(String username) {
        initComponents();
         this.setLocationRelativeTo(null);
         setSize(951, 531);
         model=(DefaultTableModel)DataTable.getModel();
         UsernameLabel.setText(username);
         LabelPic.setIcon(picvector);
         LabelLianaPic.setIcon(lianavector);
         LabelPic.setText("");
         LabelLianaPic.setText("");
         fillComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new java.awt.Panel();
        jScrollPane1 = new javax.swing.JScrollPane();
        DataTable = new javax.swing.JTable();
        LabelPic = new javax.swing.JLabel();
        LoadButton = new javax.swing.JButton();
        UpdateButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        PeriodComboBox = new javax.swing.JComboBox<>();
        UsernameLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        RowsLabel = new javax.swing.JLabel();
        AverageLabel = new javax.swing.JLabel();
        PerformanceLabel = new javax.swing.JLabel();
        LabelLianaPic = new javax.swing.JLabel();
        PerformanceLabel2 = new javax.swing.JLabel();
        RefreshButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dashboard");
        setPreferredSize(new java.awt.Dimension(790, 524));
        setResizable(false);

        panel1.setBackground(new java.awt.Color(248, 171, 20));

        DataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course", "Period", "Evaluations", "Done", "Grade", "Pending", "Needed ", "Selection"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(DataTable);
        if (DataTable.getColumnModel().getColumnCount() > 0) {
            DataTable.getColumnModel().getColumn(0).setMinWidth(110);
        }

        LabelPic.setText("jLabel1");

        LoadButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\oscar\\OneDrive\\Documentos\\NetBeansProjects\\Monotes\\Add.png")); // NOI18N
        LoadButton.setText(" Load course");
        LoadButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        LoadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadButtonActionPerformed(evt);
            }
        });

        UpdateButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\oscar\\OneDrive\\Documentos\\NetBeansProjects\\Monotes\\Up.png")); // NOI18N
        UpdateButton.setText(" Update course");
        UpdateButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });

        DeleteButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\oscar\\OneDrive\\Documentos\\NetBeansProjects\\Monotes\\Delete.png")); // NOI18N
        DeleteButton.setText(" Delete course");
        DeleteButton.setToolTipText("");
        DeleteButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Period:");

        PeriodComboBox.setSelectedItem("All");
        PeriodComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                PeriodComboBoxItemStateChanged(evt);
            }
        });
        PeriodComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PeriodComboBoxMouseClicked(evt);
            }
        });
        PeriodComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PeriodComboBoxActionPerformed(evt);
            }
        });

        UsernameLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        UsernameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        UsernameLabel.setText("@oscarpobletes");

        jLabel3.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Hello,");

        RowsLabel.setText("Rows:");

        AverageLabel.setText("Average:");

        PerformanceLabel.setText("Performance:");

        LabelLianaPic.setText("jLabel7");

        PerformanceLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        RefreshButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\oscar\\OneDrive\\Documentos\\NetBeansProjects\\Monotes\\Refresh.png")); // NOI18N
        RefreshButton.setText("Refresh");
        RefreshButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        RefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PeriodComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(UpdateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(LoadButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(DeleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(RefreshButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(51, 51, 51))
                    .addComponent(UsernameLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                        .addComponent(LabelPic, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76)))
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 567, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addComponent(RowsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(AverageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)
                        .addComponent(PerformanceLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PerformanceLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(LabelLianaPic, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(LabelPic, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UsernameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(PeriodComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addComponent(LoadButton)
                        .addGap(26, 26, 26)
                        .addComponent(UpdateButton)
                        .addGap(26, 26, 26)
                        .addComponent(DeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(RefreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(LabelLianaPic, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PerformanceLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(RowsLabel)
                        .addComponent(AverageLabel)
                        .addComponent(PerformanceLabel)))
                .addGap(61, 61, 61))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void fillTable(){

        try{
            Database db=new Database();
            boolean resp=db.Connect();
          if(resp){
            String sql="";
            if(PeriodComboBox.getItemCount()==0){
            sql="SELECT c_id, period, evaluations, d_evaluations, grade, pending, needed FROM courses WHERE username_fk='"+UsernameLabel.getText()+"' ORDER BY period ASC";
             }else if(PeriodComboBox.getSelectedItem().toString().equals("All")){ //Tried with || and didn't work because of null state when removing all items from comboBox
            sql="SELECT c_id, period, evaluations, d_evaluations, grade, pending, needed FROM courses WHERE username_fk='"+UsernameLabel.getText()+"' ORDER BY period ASC";
             }else{
            sql="SELECT c_id, period, evaluations, d_evaluations, grade, pending, needed FROM courses WHERE username_fk='"+UsernameLabel.getText()+"'"
                + "and period="+Double.parseDouble(PeriodComboBox.getSelectedItem().toString())+"ORDER BY c_id ASC";
            }
               ResultSet rs= db.resultset(sql);
               //Mientras el resultSet tenga datos estare en ciclo
               while(rs.next()){
                   String c_id;
                   int period,evaluations,d_evaluations,pending;
                   double grade,needed;
                   Object o[]=new Object[8];
                   c_id=rs.getString("c_id");
                   period=rs.getInt("period");
                   evaluations=rs.getInt("evaluations");
                   d_evaluations=rs.getInt("d_evaluations");
                   grade=rs.getDouble("grade");
                   pending=rs.getInt("pending");
                   needed=rs.getDouble("needed");
                   o[0]=c_id;
                   o[1]=period;
                   o[2]=evaluations;
                   o[3]=d_evaluations;
                   o[4]=grade;
                   o[5]=pending;
                   o[6]=needed;
                   o[7]=false;
                   model.addRow(o);
               }
               rs.close();
               db.Disconnect();
          }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error:"+e.toString());
        }
    }                                        
    
    public void fillComboBox(){
        Database db=new Database();
        try{
        boolean resp = db.Connect();
        String sql="SELECT DISTINCT period FROM courses c WHERE username_fk='"+UsernameLabel.getText()+"' ORDER BY period ASC";
        ResultSet rs = db.resultset(sql);
        PeriodComboBox.removeAllItems();
        PeriodComboBox.addItem("All");
        while(rs.next()){
            PeriodComboBox.addItem(rs.getString("period"));
        }      
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, " Error: "+e.toString());
        }finally{
            if(db.Connect()!=false){
                db.Disconnect();   
            }
        }
            
    }
    private void PeriodComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PeriodComboBoxActionPerformed
        
    }//GEN-LAST:event_PeriodComboBoxActionPerformed

    private void LoadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadButtonActionPerformed
        LoadC loadc=new LoadC(UsernameLabel.getText());
        loadc.show();
        
    }//GEN-LAST:event_LoadButtonActionPerformed

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
        UpdateC updatec=new UpdateC(UsernameLabel.getText());
        updatec.show();
    }//GEN-LAST:event_UpdateButtonActionPerformed

    private void PeriodComboBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PeriodComboBoxMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_PeriodComboBoxMouseClicked

    private void PeriodComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_PeriodComboBoxItemStateChanged
        // TODO add your handling code here:
        model.setNumRows(0); //change table content when sorting by combobox
        fillTable();
        RowsLabel.setText("Rows: "+model.getRowCount());
        try{
        String sql="";
        if(PeriodComboBox.getItemCount()==0){
            sql="SELECT avg(grade) FROM courses WHERE username_fk='"+UsernameLabel.getText()+"'";
            }else if(PeriodComboBox.getSelectedItem().toString().equals("All")){ //Tried with || and didn't work because of null state when removing all items from comboBox
            sql="SELECT avg(grade) FROM courses WHERE username_fk='"+UsernameLabel.getText()+"'";
            }else{
            sql="SELECT avg(grade) FROM courses WHERE username_fk='"+UsernameLabel.getText()+"' and period="+Double.parseDouble(PeriodComboBox.getSelectedItem().toString())+"";
            }
        
        Database db = new Database();
        DecimalFormat dFormatter= new DecimalFormat("0.00");
        boolean resp=db.Connect();
        ResultSet rs = db.resultset(sql);
        if(rs.next()){
            double avg = rs.getDouble("avg(grade)");
            AverageLabel.setText("Average: "+dFormatter.format(avg));
            if(avg<6){
                PerformanceLabel2.setForeground(Color.red);
                PerformanceLabel2.setText("Low");
            }else if(avg>=6 && avg<=8){
                PerformanceLabel2.setForeground(Color.yellow);
                PerformanceLabel2.setText("Medium");
            }else{
                PerformanceLabel2.setForeground(Color.decode("#006400"));
                PerformanceLabel2.setText("High");
            }
        }
        
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, " Error: "+e.toString());
        }
    }//GEN-LAST:event_PeriodComboBoxItemStateChanged

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        // TODO add your handling code here:
       for(int i=0;i<model.getRowCount();i++){
           if(model.getValueAt(i, 7).toString().equals("true")){
               String c_id = model.getValueAt(i, 0).toString();
               String sql="DELETE FROM courses where c_id='"+c_id+"' and username_fk='"+UsernameLabel.getText()+"'";
               model.removeRow(i);
               Database db = new Database();
               boolean resp=db.Connect();
            if(resp){
               db.query(sql);
               JOptionPane.showMessageDialog(null, "Course has been deleted","Success",JOptionPane.INFORMATION_MESSAGE);
               db.Disconnect();
            }
           }
       }
       fillComboBox();
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void RefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshButtonActionPerformed
        // TODO add your handling code here:
        fillComboBox();
        
    }//GEN-LAST:event_RefreshButtonActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Dashboard().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AverageLabel;
    private javax.swing.JTable DataTable;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JLabel LabelLianaPic;
    private javax.swing.JLabel LabelPic;
    private javax.swing.JButton LoadButton;
    private javax.swing.JLabel PerformanceLabel;
    private javax.swing.JLabel PerformanceLabel2;
    private javax.swing.JComboBox<String> PeriodComboBox;
    private javax.swing.JButton RefreshButton;
    private javax.swing.JLabel RowsLabel;
    private javax.swing.JButton UpdateButton;
    private javax.swing.JLabel UsernameLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.Panel panel1;
    // End of variables declaration//GEN-END:variables
}
